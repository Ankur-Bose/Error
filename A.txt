#include<stdio.h>
#include<stdlib.h>
struct Stack{
	int size;
	int top;
	int* arr;
};

int isFull(struct Stack* sp)
{
	if(sp->top==sp->size-1)
	{
		return 0;
	}
	return 1;
}

int isEmpty(struct Stack* sp)
{
	if(sp->top==-1)
	{
		return 0;
	}
	return 1;
}

void push(struct Stack* sp, int val)
{
	if(isFull(sp))
	{
		printf("Stack is Full \n");
	}
	else
	{
		sp->top++;
		sp->arr[sp->top]=val;
	}
}

int pop(struct Stack* sp)
{
	if(isEmpty(sp))
	{
		printf("Stack is empty ");
	}
	else
	{
		int val = sp->arr[sp->top];
		sp->top--;
		
		return val;
	}
}

void display(struct Stack* sp)
{
	int i;
	for(i=sp->top;i>0;i--)
	{
		printf("%d ",sp->arr[i]);
	}
}

int main()
{
	struct Stack* sp;
	sp->size=100;
	sp->top=-1;
	sp->arr = (int*)malloc(sp->size*sizeof(struct Stack));
	
	int ch;
	int val;
	int item;
	do{
		printf("\nMENU\n");
		printf("1 to PUSH \n");
		printf("2 to POP \n");
		printf("3 to DISPLAY \n");
		printf("4 to EXIT \n");
		printf("Enter your choice \n");
		scanf("%d",&ch);
		
		switch(ch)
		{
			case 1:
				printf("Enter item u want to PUSH into the stack ");
				scanf("%d",&item);
				
				push(sp,item);
				break;
			case 2:
				val = pop(sp);
				printf("Element popped is %d",val);
				break;
			case 3:
				printf("Elements in stack are \n");
				display(sp);
				break;
			default:
				printf("Thank u \n");			
		}
	}while(ch!=4);
	
	return 0;
}











